2025-06-23 16:05:42,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 16:05:42,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 16:05:42,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 16:05:42,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 16:08:45,206:INFO:PyCaret ClassificationExperiment
2025-06-23 16:08:45,206:INFO:Logging name: churn1
2025-06-23 16:08:45,206:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-23 16:08:45,206:INFO:version 3.3.2
2025-06-23 16:08:45,206:INFO:Initializing setup()
2025-06-23 16:08:45,206:INFO:self.USI: f64a
2025-06-23 16:08:45,206:INFO:self._variable_keys: {'data', 'fold_shuffle_param', 'fold_groups_param', 'exp_id', 'target_param', 'exp_name_log', 'fold_generator', 'logging_param', 'seed', 'gpu_param', 'memory', '_ml_usecase', 'fix_imbalance', 'y', 'idx', 'n_jobs_param', 'gpu_n_jobs_param', 'y_train', 'USI', 'X', 'log_plots_param', 'y_test', 'pipeline', 'X_test', 'html_param', 'is_multiclass', 'X_train', '_available_plots'}
2025-06-23 16:08:45,206:INFO:Checking environment
2025-06-23 16:08:45,206:INFO:python_version: 3.10.18
2025-06-23 16:08:45,206:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-06-23 16:08:45,206:INFO:machine: AMD64
2025-06-23 16:08:45,206:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-23 16:08:45,215:INFO:Memory: svmem(total=16474632192, available=7841882112, percent=52.4, used=8632750080, free=7841882112)
2025-06-23 16:08:45,215:INFO:Physical Core: 8
2025-06-23 16:08:45,215:INFO:Logical Core: 16
2025-06-23 16:08:45,215:INFO:Checking libraries
2025-06-23 16:08:45,215:INFO:System:
2025-06-23 16:08:45,215:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-06-23 16:08:45,215:INFO:executable: c:\Users\Yashar\anaconda3\envs\pycaret_env\python.exe
2025-06-23 16:08:45,215:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-23 16:08:45,215:INFO:PyCaret required dependencies:
2025-06-23 16:08:45,577:INFO:                 pip: 25.1
2025-06-23 16:08:45,577:INFO:          setuptools: 78.1.1
2025-06-23 16:08:45,579:INFO:             pycaret: 3.3.2
2025-06-23 16:08:45,579:INFO:             IPython: 8.37.0
2025-06-23 16:08:45,579:INFO:          ipywidgets: 8.1.7
2025-06-23 16:08:45,579:INFO:                tqdm: 4.67.1
2025-06-23 16:08:45,579:INFO:               numpy: 1.26.4
2025-06-23 16:08:45,579:INFO:              pandas: 2.1.4
2025-06-23 16:08:45,579:INFO:              jinja2: 3.1.6
2025-06-23 16:08:45,579:INFO:               scipy: 1.11.4
2025-06-23 16:08:45,579:INFO:              joblib: 1.3.2
2025-06-23 16:08:45,579:INFO:             sklearn: 1.4.2
2025-06-23 16:08:45,579:INFO:                pyod: 2.0.5
2025-06-23 16:08:45,579:INFO:            imblearn: 0.13.0
2025-06-23 16:08:45,579:INFO:   category_encoders: 2.7.0
2025-06-23 16:08:45,579:INFO:            lightgbm: 4.6.0
2025-06-23 16:08:45,579:INFO:               numba: 0.61.2
2025-06-23 16:08:45,579:INFO:            requests: 2.32.4
2025-06-23 16:08:45,579:INFO:          matplotlib: 3.7.5
2025-06-23 16:08:45,579:INFO:          scikitplot: 0.3.7
2025-06-23 16:08:45,579:INFO:         yellowbrick: 1.5
2025-06-23 16:08:45,579:INFO:              plotly: 5.24.1
2025-06-23 16:08:45,579:INFO:    plotly-resampler: Not installed
2025-06-23 16:08:45,579:INFO:             kaleido: 1.0.0
2025-06-23 16:08:45,579:INFO:           schemdraw: 0.15
2025-06-23 16:08:45,579:INFO:         statsmodels: 0.14.4
2025-06-23 16:08:45,579:INFO:              sktime: 0.26.0
2025-06-23 16:08:45,579:INFO:               tbats: 1.1.3
2025-06-23 16:08:45,579:INFO:            pmdarima: 2.0.4
2025-06-23 16:08:45,579:INFO:              psutil: 7.0.0
2025-06-23 16:08:45,579:INFO:          markupsafe: 3.0.2
2025-06-23 16:08:45,579:INFO:             pickle5: Not installed
2025-06-23 16:08:45,579:INFO:         cloudpickle: 3.1.1
2025-06-23 16:08:45,579:INFO:         deprecation: 2.1.0
2025-06-23 16:08:45,579:INFO:              xxhash: 3.5.0
2025-06-23 16:08:45,579:INFO:           wurlitzer: Not installed
2025-06-23 16:08:45,579:INFO:PyCaret optional dependencies:
2025-06-23 16:08:46,915:INFO:                shap: Not installed
2025-06-23 16:08:46,915:INFO:           interpret: Not installed
2025-06-23 16:08:46,915:INFO:                umap: Not installed
2025-06-23 16:08:46,915:INFO:     ydata_profiling: Not installed
2025-06-23 16:08:46,915:INFO:  explainerdashboard: Not installed
2025-06-23 16:08:46,915:INFO:             autoviz: Not installed
2025-06-23 16:08:46,915:INFO:           fairlearn: Not installed
2025-06-23 16:08:46,915:INFO:          deepchecks: Not installed
2025-06-23 16:08:46,915:INFO:             xgboost: Not installed
2025-06-23 16:08:46,915:INFO:            catboost: Not installed
2025-06-23 16:08:46,915:INFO:              kmodes: Not installed
2025-06-23 16:08:46,915:INFO:             mlxtend: Not installed
2025-06-23 16:08:46,915:INFO:       statsforecast: Not installed
2025-06-23 16:08:46,915:INFO:        tune_sklearn: Not installed
2025-06-23 16:08:46,915:INFO:                 ray: Not installed
2025-06-23 16:08:46,915:INFO:            hyperopt: Not installed
2025-06-23 16:08:46,915:INFO:              optuna: Not installed
2025-06-23 16:08:46,915:INFO:               skopt: Not installed
2025-06-23 16:08:46,915:INFO:              mlflow: 3.1.0
2025-06-23 16:08:46,915:INFO:              gradio: Not installed
2025-06-23 16:08:46,917:INFO:             fastapi: 0.115.13
2025-06-23 16:08:46,917:INFO:             uvicorn: 0.34.3
2025-06-23 16:08:46,917:INFO:              m2cgen: Not installed
2025-06-23 16:08:46,917:INFO:           evidently: Not installed
2025-06-23 16:08:46,917:INFO:               fugue: Not installed
2025-06-23 16:08:46,917:INFO:           streamlit: Not installed
2025-06-23 16:08:46,917:INFO:             prophet: Not installed
2025-06-23 16:08:46,917:INFO:None
2025-06-23 16:08:46,917:INFO:Set up data.
2025-06-23 16:08:46,955:INFO:Set up folding strategy.
2025-06-23 16:08:46,955:INFO:Set up train/test split.
2025-06-23 16:08:47,323:INFO:Set up index.
2025-06-23 16:08:47,324:INFO:Assigning column types.
2025-06-23 16:08:47,331:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-23 16:08:47,406:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-23 16:08:47,411:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 16:08:47,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,533:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-23 16:08:47,534:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 16:08:47,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,566:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-23 16:08:47,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 16:08:47,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 16:08:47,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,788:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-23 16:08:47,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:47,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:48,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:48,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:48,003:INFO:Preparing preprocessing pipeline...
2025-06-23 16:08:48,006:INFO:Set up label encoding.
2025-06-23 16:08:48,006:INFO:Set up simple imputation.
2025-06-23 16:08:48,014:INFO:Set up encoding of ordinal features.
2025-06-23 16:08:48,026:INFO:Set up encoding of categorical features.
2025-06-23 16:08:48,633:INFO:Finished creating preprocessing pipeline.
2025-06-23 16:08:48,708:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Yashar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-23 16:08:48,708:INFO:Creating final display dataframe.
2025-06-23 16:08:49,645:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 21)
5        Transformed data shape       (7043, 41)
6   Transformed train set shape       (4930, 41)
7    Transformed test set shape       (2113, 41)
8               Ignore features                1
9              Numeric features                3
10         Categorical features               16
11                   Preprocess             True
12              Imputation type           simple
13           Numeric imputation             mean
14       Categorical imputation             mode
15     Maximum one-hot encoding               25
16              Encoding method             None
17               Fold Generator  StratifiedKFold
18                  Fold Number               10
19                     CPU Jobs               -1
20                      Use GPU            False
21               Log Experiment     MlflowLogger
22              Experiment Name           churn1
23                          USI             f64a
2025-06-23 16:08:49,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:49,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:49,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:49,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:08:49,820:INFO:Logging experiment in loggers
2025-06-23 16:16:07,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 16:16:07,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 16:16:07,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 16:16:07,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 16:16:16,909:INFO:PyCaret ClassificationExperiment
2025-06-23 16:16:16,909:INFO:Logging name: churn1
2025-06-23 16:16:16,909:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-23 16:16:16,909:INFO:version 3.3.2
2025-06-23 16:16:16,909:INFO:Initializing setup()
2025-06-23 16:16:16,909:INFO:self.USI: 358f
2025-06-23 16:16:16,909:INFO:self._variable_keys: {'y_test', '_ml_usecase', 'n_jobs_param', 'html_param', 'memory', 'idx', 'fold_generator', 'exp_name_log', 'log_plots_param', 'seed', 'fold_groups_param', 'data', 'X_train', 'X', 'fold_shuffle_param', 'logging_param', '_available_plots', 'y_train', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'exp_id', 'y', 'pipeline', 'USI', 'fix_imbalance', 'is_multiclass', 'X_test'}
2025-06-23 16:16:16,909:INFO:Checking environment
2025-06-23 16:16:16,910:INFO:python_version: 3.10.18
2025-06-23 16:16:16,910:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-06-23 16:16:16,910:INFO:machine: AMD64
2025-06-23 16:16:16,910:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-23 16:16:16,920:INFO:Memory: svmem(total=16474632192, available=7499988992, percent=54.5, used=8974643200, free=7499988992)
2025-06-23 16:16:16,920:INFO:Physical Core: 8
2025-06-23 16:16:16,920:INFO:Logical Core: 16
2025-06-23 16:16:16,920:INFO:Checking libraries
2025-06-23 16:16:16,920:INFO:System:
2025-06-23 16:16:16,920:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-06-23 16:16:16,920:INFO:executable: c:\Users\Yashar\anaconda3\envs\pycaret_env\python.exe
2025-06-23 16:16:16,920:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-23 16:16:16,920:INFO:PyCaret required dependencies:
2025-06-23 16:16:16,991:INFO:                 pip: 25.1
2025-06-23 16:16:16,991:INFO:          setuptools: 78.1.1
2025-06-23 16:16:16,991:INFO:             pycaret: 3.3.2
2025-06-23 16:16:16,991:INFO:             IPython: 8.37.0
2025-06-23 16:16:16,991:INFO:          ipywidgets: 8.1.7
2025-06-23 16:16:16,991:INFO:                tqdm: 4.67.1
2025-06-23 16:16:16,991:INFO:               numpy: 1.26.4
2025-06-23 16:16:16,991:INFO:              pandas: 2.1.4
2025-06-23 16:16:16,991:INFO:              jinja2: 3.1.6
2025-06-23 16:16:16,991:INFO:               scipy: 1.11.4
2025-06-23 16:16:16,991:INFO:              joblib: 1.3.2
2025-06-23 16:16:16,991:INFO:             sklearn: 1.4.2
2025-06-23 16:16:16,991:INFO:                pyod: 2.0.5
2025-06-23 16:16:16,991:INFO:            imblearn: 0.13.0
2025-06-23 16:16:16,992:INFO:   category_encoders: 2.7.0
2025-06-23 16:16:16,992:INFO:            lightgbm: 4.6.0
2025-06-23 16:16:16,992:INFO:               numba: 0.61.2
2025-06-23 16:16:16,992:INFO:            requests: 2.32.4
2025-06-23 16:16:16,992:INFO:          matplotlib: 3.7.5
2025-06-23 16:16:16,992:INFO:          scikitplot: 0.3.7
2025-06-23 16:16:16,992:INFO:         yellowbrick: 1.5
2025-06-23 16:16:16,992:INFO:              plotly: 5.24.1
2025-06-23 16:16:16,992:INFO:    plotly-resampler: Not installed
2025-06-23 16:16:16,992:INFO:             kaleido: 1.0.0
2025-06-23 16:16:16,992:INFO:           schemdraw: 0.15
2025-06-23 16:16:16,992:INFO:         statsmodels: 0.14.4
2025-06-23 16:16:16,992:INFO:              sktime: 0.26.0
2025-06-23 16:16:16,992:INFO:               tbats: 1.1.3
2025-06-23 16:16:16,992:INFO:            pmdarima: 2.0.4
2025-06-23 16:16:16,993:INFO:              psutil: 7.0.0
2025-06-23 16:16:16,993:INFO:          markupsafe: 3.0.2
2025-06-23 16:16:16,993:INFO:             pickle5: Not installed
2025-06-23 16:16:16,993:INFO:         cloudpickle: 2.2.1
2025-06-23 16:16:16,993:INFO:         deprecation: 2.1.0
2025-06-23 16:16:16,993:INFO:              xxhash: 3.5.0
2025-06-23 16:16:16,993:INFO:           wurlitzer: Not installed
2025-06-23 16:16:16,993:INFO:PyCaret optional dependencies:
2025-06-23 16:16:17,491:INFO:                shap: Not installed
2025-06-23 16:16:17,491:INFO:           interpret: Not installed
2025-06-23 16:16:17,491:INFO:                umap: Not installed
2025-06-23 16:16:17,491:INFO:     ydata_profiling: Not installed
2025-06-23 16:16:17,491:INFO:  explainerdashboard: Not installed
2025-06-23 16:16:17,491:INFO:             autoviz: Not installed
2025-06-23 16:16:17,491:INFO:           fairlearn: Not installed
2025-06-23 16:16:17,491:INFO:          deepchecks: Not installed
2025-06-23 16:16:17,491:INFO:             xgboost: Not installed
2025-06-23 16:16:17,491:INFO:            catboost: Not installed
2025-06-23 16:16:17,494:INFO:              kmodes: Not installed
2025-06-23 16:16:17,494:INFO:             mlxtend: Not installed
2025-06-23 16:16:17,494:INFO:       statsforecast: Not installed
2025-06-23 16:16:17,494:INFO:        tune_sklearn: Not installed
2025-06-23 16:16:17,494:INFO:                 ray: Not installed
2025-06-23 16:16:17,494:INFO:            hyperopt: Not installed
2025-06-23 16:16:17,494:INFO:              optuna: Not installed
2025-06-23 16:16:17,494:INFO:               skopt: Not installed
2025-06-23 16:16:17,494:INFO:              mlflow: 3.1.0
2025-06-23 16:16:17,494:INFO:              gradio: Not installed
2025-06-23 16:16:17,494:INFO:             fastapi: 0.115.13
2025-06-23 16:16:17,494:INFO:             uvicorn: 0.34.3
2025-06-23 16:16:17,494:INFO:              m2cgen: Not installed
2025-06-23 16:16:17,494:INFO:           evidently: Not installed
2025-06-23 16:16:17,494:INFO:               fugue: Not installed
2025-06-23 16:16:17,494:INFO:           streamlit: Not installed
2025-06-23 16:16:17,494:INFO:             prophet: Not installed
2025-06-23 16:16:17,494:INFO:None
2025-06-23 16:16:17,494:INFO:Set up data.
2025-06-23 16:16:17,533:INFO:Set up folding strategy.
2025-06-23 16:16:17,536:INFO:Set up train/test split.
2025-06-23 16:16:17,567:INFO:Set up index.
2025-06-23 16:16:17,567:INFO:Assigning column types.
2025-06-23 16:16:17,572:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-23 16:16:17,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-23 16:16:17,645:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 16:16:17,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:17,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:17,782:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-23 16:16:17,782:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 16:16:17,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:17,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:17,826:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-23 16:16:17,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 16:16:17,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:17,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:18,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 16:16:18,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:18,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:18,071:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-23 16:16:18,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:18,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:18,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:18,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:18,287:INFO:Preparing preprocessing pipeline...
2025-06-23 16:16:18,289:INFO:Set up label encoding.
2025-06-23 16:16:18,289:INFO:Set up simple imputation.
2025-06-23 16:16:18,298:INFO:Set up encoding of ordinal features.
2025-06-23 16:16:18,301:INFO:Set up encoding of categorical features.
2025-06-23 16:16:18,733:INFO:Finished creating preprocessing pipeline.
2025-06-23 16:16:18,814:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Yashar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-23 16:16:18,814:INFO:Creating final display dataframe.
2025-06-23 16:16:20,033:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 21)
5        Transformed data shape       (7043, 41)
6   Transformed train set shape       (4930, 41)
7    Transformed test set shape       (2113, 41)
8               Ignore features                1
9              Numeric features                3
10         Categorical features               16
11                   Preprocess             True
12              Imputation type           simple
13           Numeric imputation             mean
14       Categorical imputation             mode
15     Maximum one-hot encoding               25
16              Encoding method             None
17               Fold Generator  StratifiedKFold
18                  Fold Number               10
19                     CPU Jobs               -1
20                      Use GPU            False
21               Log Experiment     MlflowLogger
22              Experiment Name           churn1
23                          USI             358f
2025-06-23 16:16:20,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:20,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:20,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:20,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-23 16:16:20,264:INFO:Logging experiment in loggers
2025-06-23 16:16:21,393:INFO:SubProcess save_model() called ==================================
2025-06-23 16:16:21,540:INFO:Initializing save_model()
2025-06-23 16:16:21,540:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Yashar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\Yashar\AppData\Local\Temp\tmpia_h36zh\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Yashar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-23 16:16:21,540:INFO:Adding model into prep_pipe
2025-06-23 16:16:21,540:WARNING:Only Model saved as it was a pipeline.
2025-06-23 16:16:21,593:INFO:C:\Users\Yashar\AppData\Local\Temp\tmpia_h36zh\Transformation Pipeline.pkl saved in current working directory
2025-06-23 16:16:21,664:INFO:Pipeline(memory=FastMemory(location=C:\Users\Yashar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-23 16:16:21,664:INFO:save_model() successfully completed......................................
2025-06-23 16:16:21,781:INFO:SubProcess save_model() end ==================================
2025-06-23 16:16:21,935:INFO:setup() successfully completed in 3.38s...............
2025-06-23 16:18:13,848:INFO:Initializing compare_models()
2025-06-23 16:18:13,848:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-23 16:18:13,848:INFO:Checking exceptions
2025-06-23 16:18:13,860:INFO:Preparing display monitor
2025-06-23 16:18:13,924:INFO:Initializing Logistic Regression
2025-06-23 16:18:13,924:INFO:Total runtime is 0.0 minutes
2025-06-23 16:18:13,936:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:13,938:INFO:Initializing create_model()
2025-06-23 16:18:13,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:13,938:INFO:Checking exceptions
2025-06-23 16:18:13,938:INFO:Importing libraries
2025-06-23 16:18:13,939:INFO:Copying training dataset
2025-06-23 16:18:13,955:INFO:Defining folds
2025-06-23 16:18:13,955:INFO:Declaring metric variables
2025-06-23 16:18:13,962:INFO:Importing untrained model
2025-06-23 16:18:13,972:INFO:Logistic Regression Imported successfully
2025-06-23 16:18:13,992:INFO:Starting cross validation
2025-06-23 16:18:14,004:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:23,056:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,064:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,075:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,122:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-23 16:18:23,122:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,132:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-23 16:18:23,132:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,143:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,182:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,182:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,191:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,193:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,199:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,201:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,220:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,229:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,237:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,244:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,247:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-23 16:18:23,251:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,254:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,257:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,259:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,260:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,266:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,268:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,277:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,301:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,306:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,311:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,330:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,336:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,341:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:23,356:INFO:Calculating mean and std
2025-06-23 16:18:23,357:INFO:Creating metrics dataframe
2025-06-23 16:18:23,360:INFO:Uploading results into container
2025-06-23 16:18:23,361:INFO:Uploading model into container now
2025-06-23 16:18:23,361:INFO:_master_model_container: 1
2025-06-23 16:18:23,361:INFO:_display_container: 2
2025-06-23 16:18:23,362:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-23 16:18:23,363:INFO:create_model() successfully completed......................................
2025-06-23 16:18:23,490:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:23,490:INFO:Creating metrics dataframe
2025-06-23 16:18:23,497:INFO:Initializing K Neighbors Classifier
2025-06-23 16:18:23,497:INFO:Total runtime is 0.15954707860946654 minutes
2025-06-23 16:18:23,502:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:23,504:INFO:Initializing create_model()
2025-06-23 16:18:23,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:23,504:INFO:Checking exceptions
2025-06-23 16:18:23,504:INFO:Importing libraries
2025-06-23 16:18:23,504:INFO:Copying training dataset
2025-06-23 16:18:23,511:INFO:Defining folds
2025-06-23 16:18:23,513:INFO:Declaring metric variables
2025-06-23 16:18:23,520:INFO:Importing untrained model
2025-06-23 16:18:23,526:INFO:K Neighbors Classifier Imported successfully
2025-06-23 16:18:23,535:INFO:Starting cross validation
2025-06-23 16:18:23,541:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:24,519:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,520:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,528:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,528:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,533:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,537:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,538:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,538:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,542:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,546:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,555:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:24,557:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,594:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,599:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,602:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,604:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,607:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,607:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,611:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,611:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,618:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,636:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,640:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,642:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,644:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,646:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,647:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,650:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,651:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,656:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:28,670:INFO:Calculating mean and std
2025-06-23 16:18:28,672:INFO:Creating metrics dataframe
2025-06-23 16:18:28,676:INFO:Uploading results into container
2025-06-23 16:18:28,677:INFO:Uploading model into container now
2025-06-23 16:18:28,678:INFO:_master_model_container: 2
2025-06-23 16:18:28,678:INFO:_display_container: 2
2025-06-23 16:18:28,679:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-23 16:18:28,679:INFO:create_model() successfully completed......................................
2025-06-23 16:18:28,824:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:28,824:INFO:Creating metrics dataframe
2025-06-23 16:18:28,831:INFO:Initializing Naive Bayes
2025-06-23 16:18:28,831:INFO:Total runtime is 0.24844762086868286 minutes
2025-06-23 16:18:28,835:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:28,836:INFO:Initializing create_model()
2025-06-23 16:18:28,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:28,836:INFO:Checking exceptions
2025-06-23 16:18:28,836:INFO:Importing libraries
2025-06-23 16:18:28,836:INFO:Copying training dataset
2025-06-23 16:18:28,843:INFO:Defining folds
2025-06-23 16:18:28,844:INFO:Declaring metric variables
2025-06-23 16:18:28,849:INFO:Importing untrained model
2025-06-23 16:18:28,854:INFO:Naive Bayes Imported successfully
2025-06-23 16:18:28,862:INFO:Starting cross validation
2025-06-23 16:18:28,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:29,448:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,450:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,451:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,452:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,454:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,455:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,456:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,459:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,460:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,460:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,461:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,464:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,464:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,466:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,468:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,471:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,472:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,475:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,476:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,477:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,481:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,482:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,483:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,483:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,491:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,496:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,501:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,506:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,510:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:29,533:INFO:Calculating mean and std
2025-06-23 16:18:29,535:INFO:Creating metrics dataframe
2025-06-23 16:18:29,537:INFO:Uploading results into container
2025-06-23 16:18:29,538:INFO:Uploading model into container now
2025-06-23 16:18:29,538:INFO:_master_model_container: 3
2025-06-23 16:18:29,539:INFO:_display_container: 2
2025-06-23 16:18:29,539:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-23 16:18:29,539:INFO:create_model() successfully completed......................................
2025-06-23 16:18:29,655:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:29,655:INFO:Creating metrics dataframe
2025-06-23 16:18:29,663:INFO:Initializing Decision Tree Classifier
2025-06-23 16:18:29,663:INFO:Total runtime is 0.2623072981834412 minutes
2025-06-23 16:18:29,667:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:29,668:INFO:Initializing create_model()
2025-06-23 16:18:29,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:29,668:INFO:Checking exceptions
2025-06-23 16:18:29,668:INFO:Importing libraries
2025-06-23 16:18:29,668:INFO:Copying training dataset
2025-06-23 16:18:29,675:INFO:Defining folds
2025-06-23 16:18:29,675:INFO:Declaring metric variables
2025-06-23 16:18:29,679:INFO:Importing untrained model
2025-06-23 16:18:29,684:INFO:Decision Tree Classifier Imported successfully
2025-06-23 16:18:29,692:INFO:Starting cross validation
2025-06-23 16:18:29,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:30,298:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,304:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,305:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,310:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,310:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,312:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,314:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,318:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,319:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,322:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,323:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,324:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,324:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,327:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,332:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,334:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,335:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,337:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,338:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,341:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,342:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,342:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,343:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,343:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,345:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,348:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,349:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,350:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,351:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,354:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:30,364:INFO:Calculating mean and std
2025-06-23 16:18:30,366:INFO:Creating metrics dataframe
2025-06-23 16:18:30,369:INFO:Uploading results into container
2025-06-23 16:18:30,369:INFO:Uploading model into container now
2025-06-23 16:18:30,370:INFO:_master_model_container: 4
2025-06-23 16:18:30,370:INFO:_display_container: 2
2025-06-23 16:18:30,370:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-06-23 16:18:30,371:INFO:create_model() successfully completed......................................
2025-06-23 16:18:30,490:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:30,490:INFO:Creating metrics dataframe
2025-06-23 16:18:30,498:INFO:Initializing SVM - Linear Kernel
2025-06-23 16:18:30,499:INFO:Total runtime is 0.276244854927063 minutes
2025-06-23 16:18:30,503:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:30,503:INFO:Initializing create_model()
2025-06-23 16:18:30,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:30,504:INFO:Checking exceptions
2025-06-23 16:18:30,504:INFO:Importing libraries
2025-06-23 16:18:30,504:INFO:Copying training dataset
2025-06-23 16:18:30,510:INFO:Defining folds
2025-06-23 16:18:30,511:INFO:Declaring metric variables
2025-06-23 16:18:30,516:INFO:Importing untrained model
2025-06-23 16:18:30,520:INFO:SVM - Linear Kernel Imported successfully
2025-06-23 16:18:30,526:INFO:Starting cross validation
2025-06-23 16:18:30,530:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:31,152:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,159:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,168:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,183:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,186:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,189:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,191:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,194:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,195:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,196:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,196:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,201:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,201:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,202:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,203:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,204:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,204:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:31,205:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,219:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,220:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,220:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,223:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,231:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:31,246:INFO:Calculating mean and std
2025-06-23 16:18:31,246:INFO:Creating metrics dataframe
2025-06-23 16:18:31,246:INFO:Uploading results into container
2025-06-23 16:18:31,246:INFO:Uploading model into container now
2025-06-23 16:18:31,246:INFO:_master_model_container: 5
2025-06-23 16:18:31,246:INFO:_display_container: 2
2025-06-23 16:18:31,246:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-23 16:18:31,246:INFO:create_model() successfully completed......................................
2025-06-23 16:18:31,370:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:31,370:INFO:Creating metrics dataframe
2025-06-23 16:18:31,376:INFO:Initializing Ridge Classifier
2025-06-23 16:18:31,376:INFO:Total runtime is 0.29086013634999597 minutes
2025-06-23 16:18:31,387:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:31,387:INFO:Initializing create_model()
2025-06-23 16:18:31,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:31,387:INFO:Checking exceptions
2025-06-23 16:18:31,387:INFO:Importing libraries
2025-06-23 16:18:31,387:INFO:Copying training dataset
2025-06-23 16:18:31,390:INFO:Defining folds
2025-06-23 16:18:31,390:INFO:Declaring metric variables
2025-06-23 16:18:31,400:INFO:Importing untrained model
2025-06-23 16:18:31,407:INFO:Ridge Classifier Imported successfully
2025-06-23 16:18:31,417:INFO:Starting cross validation
2025-06-23 16:18:31,424:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:32,026:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,032:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,036:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,038:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,040:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,040:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,042:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,044:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,048:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,048:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,050:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,056:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,060:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,062:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,065:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,067:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,067:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,072:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,072:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,072:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,083:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,083:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,083:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,083:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,083:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,083:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,083:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,083:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,098:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,098:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:32,114:INFO:Calculating mean and std
2025-06-23 16:18:32,117:INFO:Creating metrics dataframe
2025-06-23 16:18:32,117:INFO:Uploading results into container
2025-06-23 16:18:32,120:INFO:Uploading model into container now
2025-06-23 16:18:32,120:INFO:_master_model_container: 6
2025-06-23 16:18:32,120:INFO:_display_container: 2
2025-06-23 16:18:32,120:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-06-23 16:18:32,122:INFO:create_model() successfully completed......................................
2025-06-23 16:18:32,239:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:32,239:INFO:Creating metrics dataframe
2025-06-23 16:18:32,245:INFO:Initializing Random Forest Classifier
2025-06-23 16:18:32,245:INFO:Total runtime is 0.30534526109695437 minutes
2025-06-23 16:18:32,250:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:32,252:INFO:Initializing create_model()
2025-06-23 16:18:32,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:32,252:INFO:Checking exceptions
2025-06-23 16:18:32,252:INFO:Importing libraries
2025-06-23 16:18:32,252:INFO:Copying training dataset
2025-06-23 16:18:32,260:INFO:Defining folds
2025-06-23 16:18:32,260:INFO:Declaring metric variables
2025-06-23 16:18:32,265:INFO:Importing untrained model
2025-06-23 16:18:32,272:INFO:Random Forest Classifier Imported successfully
2025-06-23 16:18:32,277:INFO:Starting cross validation
2025-06-23 16:18:32,284:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:33,298:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,309:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,313:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,313:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,318:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,321:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,322:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,330:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,333:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,357:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,363:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,368:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,389:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,391:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,395:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,397:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,401:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,403:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,405:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,410:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,417:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,449:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,454:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,458:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,465:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,465:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,470:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,470:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,475:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,475:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:33,490:INFO:Calculating mean and std
2025-06-23 16:18:33,491:INFO:Creating metrics dataframe
2025-06-23 16:18:33,494:INFO:Uploading results into container
2025-06-23 16:18:33,494:INFO:Uploading model into container now
2025-06-23 16:18:33,495:INFO:_master_model_container: 7
2025-06-23 16:18:33,495:INFO:_display_container: 2
2025-06-23 16:18:33,495:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-06-23 16:18:33,495:INFO:create_model() successfully completed......................................
2025-06-23 16:18:33,611:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:33,612:INFO:Creating metrics dataframe
2025-06-23 16:18:33,622:INFO:Initializing Quadratic Discriminant Analysis
2025-06-23 16:18:33,622:INFO:Total runtime is 0.32828634182612104 minutes
2025-06-23 16:18:33,625:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:33,626:INFO:Initializing create_model()
2025-06-23 16:18:33,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:33,627:INFO:Checking exceptions
2025-06-23 16:18:33,627:INFO:Importing libraries
2025-06-23 16:18:33,627:INFO:Copying training dataset
2025-06-23 16:18:33,635:INFO:Defining folds
2025-06-23 16:18:33,635:INFO:Declaring metric variables
2025-06-23 16:18:33,639:INFO:Importing untrained model
2025-06-23 16:18:33,643:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-23 16:18:33,650:INFO:Starting cross validation
2025-06-23 16:18:33,653:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:34,165:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,179:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,253:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,287:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,300:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,309:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,319:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,323:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,326:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,329:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,335:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,336:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,341:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,348:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,367:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,378:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 16:18:34,382:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,388:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,393:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,396:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,403:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,408:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,429:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,429:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,433:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,434:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,434:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,439:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,440:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,442:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,448:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,450:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,453:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,453:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,461:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,463:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,467:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,469:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,473:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:34,488:INFO:Calculating mean and std
2025-06-23 16:18:34,490:INFO:Creating metrics dataframe
2025-06-23 16:18:34,493:INFO:Uploading results into container
2025-06-23 16:18:34,493:INFO:Uploading model into container now
2025-06-23 16:18:34,494:INFO:_master_model_container: 8
2025-06-23 16:18:34,494:INFO:_display_container: 2
2025-06-23 16:18:34,495:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-23 16:18:34,495:INFO:create_model() successfully completed......................................
2025-06-23 16:18:34,612:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:34,612:INFO:Creating metrics dataframe
2025-06-23 16:18:34,622:INFO:Initializing Ada Boost Classifier
2025-06-23 16:18:34,623:INFO:Total runtime is 0.34497956037521366 minutes
2025-06-23 16:18:34,628:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:34,628:INFO:Initializing create_model()
2025-06-23 16:18:34,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:34,628:INFO:Checking exceptions
2025-06-23 16:18:34,629:INFO:Importing libraries
2025-06-23 16:18:34,629:INFO:Copying training dataset
2025-06-23 16:18:34,636:INFO:Defining folds
2025-06-23 16:18:34,636:INFO:Declaring metric variables
2025-06-23 16:18:34,641:INFO:Importing untrained model
2025-06-23 16:18:34,645:INFO:Ada Boost Classifier Imported successfully
2025-06-23 16:18:34,654:INFO:Starting cross validation
2025-06-23 16:18:34,658:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:35,150:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,150:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,150:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,152:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,152:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,152:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,152:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,153:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,154:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,166:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 16:18:35,617:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,617:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,617:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,628:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,630:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,630:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,632:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,634:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,636:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,636:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,638:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,638:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,640:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,640:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,642:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,644:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,648:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,652:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,652:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,652:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,652:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,659:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,660:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,662:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,664:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,666:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,666:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,670:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:35,692:INFO:Calculating mean and std
2025-06-23 16:18:35,693:INFO:Creating metrics dataframe
2025-06-23 16:18:35,696:INFO:Uploading results into container
2025-06-23 16:18:35,696:INFO:Uploading model into container now
2025-06-23 16:18:35,698:INFO:_master_model_container: 9
2025-06-23 16:18:35,698:INFO:_display_container: 2
2025-06-23 16:18:35,699:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-06-23 16:18:35,699:INFO:create_model() successfully completed......................................
2025-06-23 16:18:35,810:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:35,810:INFO:Creating metrics dataframe
2025-06-23 16:18:35,826:INFO:Initializing Gradient Boosting Classifier
2025-06-23 16:18:35,827:INFO:Total runtime is 0.3650356491406759 minutes
2025-06-23 16:18:35,830:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:35,830:INFO:Initializing create_model()
2025-06-23 16:18:35,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:35,830:INFO:Checking exceptions
2025-06-23 16:18:35,832:INFO:Importing libraries
2025-06-23 16:18:35,832:INFO:Copying training dataset
2025-06-23 16:18:35,832:INFO:Defining folds
2025-06-23 16:18:35,832:INFO:Declaring metric variables
2025-06-23 16:18:35,844:INFO:Importing untrained model
2025-06-23 16:18:35,850:INFO:Gradient Boosting Classifier Imported successfully
2025-06-23 16:18:35,851:INFO:Starting cross validation
2025-06-23 16:18:35,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:37,239:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,246:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,253:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,262:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,269:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,274:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,309:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,313:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,315:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,320:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,322:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,322:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,325:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,327:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,328:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,331:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,334:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,335:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,336:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,336:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,339:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,340:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,344:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,344:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,345:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,349:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,354:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,364:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,369:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,374:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:37,395:INFO:Calculating mean and std
2025-06-23 16:18:37,397:INFO:Creating metrics dataframe
2025-06-23 16:18:37,399:INFO:Uploading results into container
2025-06-23 16:18:37,400:INFO:Uploading model into container now
2025-06-23 16:18:37,400:INFO:_master_model_container: 10
2025-06-23 16:18:37,400:INFO:_display_container: 2
2025-06-23 16:18:37,401:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-23 16:18:37,402:INFO:create_model() successfully completed......................................
2025-06-23 16:18:37,520:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:37,520:INFO:Creating metrics dataframe
2025-06-23 16:18:37,529:INFO:Initializing Linear Discriminant Analysis
2025-06-23 16:18:37,529:INFO:Total runtime is 0.3934129198392232 minutes
2025-06-23 16:18:37,535:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:37,535:INFO:Initializing create_model()
2025-06-23 16:18:37,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:37,535:INFO:Checking exceptions
2025-06-23 16:18:37,535:INFO:Importing libraries
2025-06-23 16:18:37,535:INFO:Copying training dataset
2025-06-23 16:18:37,542:INFO:Defining folds
2025-06-23 16:18:37,543:INFO:Declaring metric variables
2025-06-23 16:18:37,547:INFO:Importing untrained model
2025-06-23 16:18:37,552:INFO:Linear Discriminant Analysis Imported successfully
2025-06-23 16:18:37,560:INFO:Starting cross validation
2025-06-23 16:18:37,564:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:38,189:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,190:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,191:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,193:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,195:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,197:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,197:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,200:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,201:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,203:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,204:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,204:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,205:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,206:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,207:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,209:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,209:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,216:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,216:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,221:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,222:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,223:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,225:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,227:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,227:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,230:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,234:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:38,244:INFO:Calculating mean and std
2025-06-23 16:18:38,246:INFO:Creating metrics dataframe
2025-06-23 16:18:38,249:INFO:Uploading results into container
2025-06-23 16:18:38,249:INFO:Uploading model into container now
2025-06-23 16:18:38,250:INFO:_master_model_container: 11
2025-06-23 16:18:38,250:INFO:_display_container: 2
2025-06-23 16:18:38,251:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-23 16:18:38,251:INFO:create_model() successfully completed......................................
2025-06-23 16:18:38,368:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:38,368:INFO:Creating metrics dataframe
2025-06-23 16:18:38,379:INFO:Initializing Extra Trees Classifier
2025-06-23 16:18:38,379:INFO:Total runtime is 0.40757086277008053 minutes
2025-06-23 16:18:38,383:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:38,384:INFO:Initializing create_model()
2025-06-23 16:18:38,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:38,384:INFO:Checking exceptions
2025-06-23 16:18:38,384:INFO:Importing libraries
2025-06-23 16:18:38,385:INFO:Copying training dataset
2025-06-23 16:18:38,391:INFO:Defining folds
2025-06-23 16:18:38,391:INFO:Declaring metric variables
2025-06-23 16:18:38,395:INFO:Importing untrained model
2025-06-23 16:18:38,400:INFO:Extra Trees Classifier Imported successfully
2025-06-23 16:18:38,409:INFO:Starting cross validation
2025-06-23 16:18:38,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:39,406:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,406:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,408:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,408:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,414:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,414:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,415:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,415:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,417:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,422:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,422:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,424:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,424:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,426:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,426:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,437:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,452:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,458:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,462:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,489:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,489:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,489:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,505:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,505:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,505:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,505:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,520:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,520:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:39,536:INFO:Calculating mean and std
2025-06-23 16:18:39,536:INFO:Creating metrics dataframe
2025-06-23 16:18:39,536:INFO:Uploading results into container
2025-06-23 16:18:39,536:INFO:Uploading model into container now
2025-06-23 16:18:39,536:INFO:_master_model_container: 12
2025-06-23 16:18:39,536:INFO:_display_container: 2
2025-06-23 16:18:39,536:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-06-23 16:18:39,536:INFO:create_model() successfully completed......................................
2025-06-23 16:18:39,659:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:39,659:INFO:Creating metrics dataframe
2025-06-23 16:18:39,671:INFO:Initializing Light Gradient Boosting Machine
2025-06-23 16:18:39,672:INFO:Total runtime is 0.42911703586578365 minutes
2025-06-23 16:18:39,675:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:39,675:INFO:Initializing create_model()
2025-06-23 16:18:39,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:39,675:INFO:Checking exceptions
2025-06-23 16:18:39,675:INFO:Importing libraries
2025-06-23 16:18:39,675:INFO:Copying training dataset
2025-06-23 16:18:39,675:INFO:Defining folds
2025-06-23 16:18:39,675:INFO:Declaring metric variables
2025-06-23 16:18:39,691:INFO:Importing untrained model
2025-06-23 16:18:39,691:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-23 16:18:39,691:INFO:Starting cross validation
2025-06-23 16:18:39,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:40,851:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,860:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,868:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,906:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,906:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,915:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,916:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,923:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,923:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,932:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,940:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:40,948:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,074:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,082:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,084:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,090:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,092:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,102:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,125:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,135:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,143:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,180:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,188:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,196:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,236:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,244:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,253:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,297:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,303:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,310:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:41,326:INFO:Calculating mean and std
2025-06-23 16:18:41,328:INFO:Creating metrics dataframe
2025-06-23 16:18:41,331:INFO:Uploading results into container
2025-06-23 16:18:41,334:INFO:Uploading model into container now
2025-06-23 16:18:41,334:INFO:_master_model_container: 13
2025-06-23 16:18:41,334:INFO:_display_container: 2
2025-06-23 16:18:41,336:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-23 16:18:41,336:INFO:create_model() successfully completed......................................
2025-06-23 16:18:41,467:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:41,467:INFO:Creating metrics dataframe
2025-06-23 16:18:41,478:INFO:Initializing Dummy Classifier
2025-06-23 16:18:41,478:INFO:Total runtime is 0.45922623475392654 minutes
2025-06-23 16:18:41,483:INFO:SubProcess create_model() called ==================================
2025-06-23 16:18:41,486:INFO:Initializing create_model()
2025-06-23 16:18:41,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155675EE00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:41,486:INFO:Checking exceptions
2025-06-23 16:18:41,486:INFO:Importing libraries
2025-06-23 16:18:41,486:INFO:Copying training dataset
2025-06-23 16:18:41,494:INFO:Defining folds
2025-06-23 16:18:41,494:INFO:Declaring metric variables
2025-06-23 16:18:41,501:INFO:Importing untrained model
2025-06-23 16:18:41,507:INFO:Dummy Classifier Imported successfully
2025-06-23 16:18:41,522:INFO:Starting cross validation
2025-06-23 16:18:41,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 16:18:42,117:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,129:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,133:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,135:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,139:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,145:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,148:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,150:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,152:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,156:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,160:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,163:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,163:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,166:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,170:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,174:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,174:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,174:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,176:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,177:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,178:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,180:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,183:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,184:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,186:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,187:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,187:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,189:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,190:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,197:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,201:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,204:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,209:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,214:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 16:18:42,215:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:42,247:INFO:Calculating mean and std
2025-06-23 16:18:42,247:INFO:Creating metrics dataframe
2025-06-23 16:18:42,250:INFO:Uploading results into container
2025-06-23 16:18:42,250:INFO:Uploading model into container now
2025-06-23 16:18:42,250:INFO:_master_model_container: 14
2025-06-23 16:18:42,250:INFO:_display_container: 2
2025-06-23 16:18:42,250:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-06-23 16:18:42,250:INFO:create_model() successfully completed......................................
2025-06-23 16:18:42,365:INFO:SubProcess create_model() end ==================================
2025-06-23 16:18:42,365:INFO:Creating metrics dataframe
2025-06-23 16:18:42,381:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-23 16:18:42,390:INFO:Initializing create_model()
2025-06-23 16:18:42,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 16:18:42,392:INFO:Checking exceptions
2025-06-23 16:18:42,392:INFO:Importing libraries
2025-06-23 16:18:42,392:INFO:Copying training dataset
2025-06-23 16:18:42,399:INFO:Defining folds
2025-06-23 16:18:42,399:INFO:Declaring metric variables
2025-06-23 16:18:42,399:INFO:Importing untrained model
2025-06-23 16:18:42,399:INFO:Declaring custom model
2025-06-23 16:18:42,400:INFO:Naive Bayes Imported successfully
2025-06-23 16:18:42,402:INFO:Cross validation set to False
2025-06-23 16:18:42,402:INFO:Fitting Model
2025-06-23 16:18:42,633:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-23 16:18:42,633:INFO:create_model() successfully completed......................................
2025-06-23 16:18:42,755:INFO:Creating Dashboard logs
2025-06-23 16:18:42,755:INFO:Model: Naive Bayes
2025-06-23 16:18:42,887:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-06-23 16:18:43,073:INFO:Initializing predict_model()
2025-06-23 16:18:43,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002155856C700>)
2025-06-23 16:18:43,073:INFO:Checking exceptions
2025-06-23 16:18:43,073:INFO:Preloading libraries
2025-06-23 16:18:43,205:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:43,218:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:43,235:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 16:18:43,432:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-06-23 16:18:43,751:INFO:Creating Dashboard logs
2025-06-23 16:18:43,755:INFO:Model: K Neighbors Classifier
2025-06-23 16:18:43,867:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-23 16:18:44,351:INFO:Creating Dashboard logs
2025-06-23 16:18:44,355:INFO:Model: Logistic Regression
2025-06-23 16:18:44,429:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-06-23 16:18:44,907:INFO:Creating Dashboard logs
2025-06-23 16:18:44,911:INFO:Model: Quadratic Discriminant Analysis
2025-06-23 16:18:45,030:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-06-23 16:18:45,527:INFO:Creating Dashboard logs
2025-06-23 16:18:45,531:INFO:Model: Random Forest Classifier
2025-06-23 16:18:45,649:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2025-06-23 16:18:46,169:INFO:Creating Dashboard logs
2025-06-23 16:18:46,169:INFO:Model: SVM - Linear Kernel
2025-06-23 16:18:46,286:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-23 16:18:46,770:INFO:Creating Dashboard logs
2025-06-23 16:18:46,776:INFO:Model: Ridge Classifier
2025-06-23 16:18:46,886:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2025-06-23 16:18:47,372:INFO:Creating Dashboard logs
2025-06-23 16:18:47,376:INFO:Model: Linear Discriminant Analysis
2025-06-23 16:18:47,492:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-06-23 16:18:47,959:INFO:Creating Dashboard logs
2025-06-23 16:18:47,963:INFO:Model: Extra Trees Classifier
2025-06-23 16:18:48,079:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2025-06-23 16:18:48,619:INFO:Creating Dashboard logs
2025-06-23 16:18:48,624:INFO:Model: Light Gradient Boosting Machine
2025-06-23 16:18:48,713:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-23 16:18:49,380:INFO:Creating Dashboard logs
2025-06-23 16:18:49,385:INFO:Model: Dummy Classifier
2025-06-23 16:18:49,476:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2025-06-23 16:18:50,102:INFO:Creating Dashboard logs
2025-06-23 16:18:50,107:INFO:Model: Ada Boost Classifier
2025-06-23 16:18:50,246:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2025-06-23 16:18:50,825:INFO:Creating Dashboard logs
2025-06-23 16:18:50,830:INFO:Model: Gradient Boosting Classifier
2025-06-23 16:18:50,928:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-23 16:18:51,577:INFO:Creating Dashboard logs
2025-06-23 16:18:51,583:INFO:Model: Decision Tree Classifier
2025-06-23 16:18:51,718:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2025-06-23 16:18:52,392:INFO:_master_model_container: 14
2025-06-23 16:18:52,392:INFO:_display_container: 2
2025-06-23 16:18:52,392:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-23 16:18:52,394:INFO:compare_models() successfully completed......................................
2025-06-23 16:20:18,953:INFO:Initializing plot_model()
2025-06-23 16:20:18,953:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, system=True)
2025-06-23 16:20:18,953:INFO:Checking exceptions
2025-06-23 16:20:18,964:INFO:Preloading libraries
2025-06-23 16:20:18,965:INFO:Copying training dataset
2025-06-23 16:20:18,966:INFO:Plot type: auc
2025-06-23 16:20:19,294:INFO:Fitting Model
2025-06-23 16:20:19,338:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-06-23 16:20:19,338:INFO:Scoring test/hold-out set
2025-06-23 16:20:24,176:INFO:Visual Rendered Successfully
2025-06-23 16:20:24,315:INFO:plot_model() successfully completed......................................
2025-06-23 16:21:27,199:INFO:Initializing plot_model()
2025-06-23 16:21:27,200:INFO:plot_model(plot=confusion_matirx, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, system=True)
2025-06-23 16:21:27,200:INFO:Checking exceptions
2025-06-23 16:23:30,422:INFO:Initializing plot_model()
2025-06-23 16:23:30,422:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, system=True)
2025-06-23 16:23:30,423:INFO:Checking exceptions
2025-06-23 16:23:30,434:INFO:Preloading libraries
2025-06-23 16:23:30,434:INFO:Copying training dataset
2025-06-23 16:23:30,434:INFO:Plot type: confusion_matrix
2025-06-23 16:23:31,010:INFO:Fitting Model
2025-06-23 16:23:31,010:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-06-23 16:23:31,011:INFO:Scoring test/hold-out set
2025-06-23 16:23:31,186:INFO:Visual Rendered Successfully
2025-06-23 16:23:31,415:INFO:plot_model() successfully completed......................................
2025-06-23 16:24:11,268:INFO:Initializing plot_model()
2025-06-23 16:24:11,268:INFO:plot_model(plot=boundary, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, system=True)
2025-06-23 16:24:11,269:INFO:Checking exceptions
2025-06-23 16:24:11,278:INFO:Preloading libraries
2025-06-23 16:24:11,279:INFO:Copying training dataset
2025-06-23 16:24:11,279:INFO:Plot type: boundary
2025-06-23 16:24:11,469:INFO:Fitting StandardScaler()
2025-06-23 16:24:11,481:INFO:Fitting PCA()
2025-06-23 16:24:11,653:INFO:Fitting Model
2025-06-23 16:24:13,316:INFO:Visual Rendered Successfully
2025-06-23 16:24:13,638:INFO:plot_model() successfully completed......................................
2025-06-23 16:24:40,039:INFO:Initializing plot_model()
2025-06-23 16:24:40,040:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, system=True)
2025-06-23 16:24:40,040:INFO:Checking exceptions
2025-06-23 16:24:57,379:INFO:Initializing plot_model()
2025-06-23 16:24:57,379:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, system=True)
2025-06-23 16:24:57,379:INFO:Checking exceptions
2025-06-23 16:25:48,119:INFO:Initializing plot_model()
2025-06-23 16:25:48,119:INFO:plot_model(plot=threshold, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021557DDD6C0>, system=True)
2025-06-23 16:25:48,119:INFO:Checking exceptions
2025-06-23 16:25:48,132:INFO:Preloading libraries
2025-06-23 16:25:48,133:INFO:Copying training dataset
2025-06-23 16:25:48,133:INFO:Plot type: threshold
2025-06-23 16:25:48,534:INFO:Fitting Model
2025-06-23 16:25:49,604:WARNING:c:\Users\Yashar\anaconda3\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-06-23 16:25:49,634:INFO:Scoring test/hold-out set
2025-06-23 16:25:50,132:INFO:Visual Rendered Successfully
2025-06-23 16:25:50,341:INFO:plot_model() successfully completed......................................
2025-06-23 16:26:47,673:INFO:Initializing save_model()
2025-06-23 16:26:47,673:INFO:save_model(model=GaussianNB(priors=None, var_smoothing=1e-09), model_name=outputs\model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Yashar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-23 16:26:47,673:INFO:Adding model into prep_pipe
2025-06-23 16:26:47,708:INFO:outputs\model.pkl saved in current working directory
2025-06-23 16:26:47,791:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-06-23 16:26:47,791:INFO:save_model() successfully completed......................................
